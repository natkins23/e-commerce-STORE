// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String @id @default(uuid())
  name      String
  userId    String
  billboards Billboard[] 
  categories Category[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sizes Size[]
  colors Color[]
  products Product[]
  orders Order[]

}
  model Billboard {
    id String @id @default(uuid())
    storeId String
    store Store @relation(fields: [storeId], references: [id])
    label String
    imageUrl String
    categories Category[] 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([storeId])
  }

  model Category{
    id String @id @default(uuid())
    storeId String
    store Store @relation(fields:[storeId],references:[id])
    billboardId String
    billboard Billboard @relation(fields:[billboardId], references:[id])
    name String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    products Product[]

    @@index([storeId])
    @@index([billboardId])


  }
model Size{
  id String @id @default(uuid())
  storeId String
  store Store @relation(fields:[storeId],references:[id])
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products Product[]
  
  @@index([storeId])
}

model Color{
  id String @id @default(uuid())
  storeId String
  store Store @relation(fields:[storeId],references:[id])
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products Product[]
  
  @@index([storeId])
}

model Product{
  id String @id @default(uuid())
  storeId String
  store Store @relation(fields:[storeId],references:[id])
  colorId String
  color Color @relation(fields:[colorId],references:[id])
  sizeId String
  size Size @relation(fields:[sizeId],references:[id])
  categoryId String
  category Category @relation(fields:[categoryId],references:[id])
  name String
  price Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  images Image[]
  orderItems OrderItem[]

  @@index([storeId])
  @@index([colorId])
  @@index([sizeId])
  @@index([categoryId])

}

model Image{
  id String @id @default(uuid())
  productsId String
  products Product @relation(fields:[productsId],references:[id],onDelete: Cascade)
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([productsId])
}

model Order{
  id String @id @default(uuid())
  storeId String
  store Store @relation(fields:[storeId],references:[id])
  orderItems OrderItem[]
  isPaid Boolean @default(false)
  phone String @default("")  
  address String @default("")  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
 
  @@index([storeId])

}

model OrderItem{
  id String @id @default(uuid())
  orderId String
  order Order @relation(fields:[orderId],references:[id])
  productId String
  product Product @relation(fields:[productId],references:[id])

  @@index([orderId])
  @@index([productId])

}